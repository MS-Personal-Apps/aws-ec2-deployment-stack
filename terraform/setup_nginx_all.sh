#!/bin/bash

# Update and install necessary packages
sudo apt update -y
sudo apt install nginx wget unzip -y
sudo apt install php-fpm php-zip php-json php-mbstring php-mysql -y

MYSQL_ROOT_PASSWORD="JETZ@214365"  # Change this to your desired root password
sudo debconf-set-selections <<< "mysql-server mysql-server/root_password password $MYSQL_ROOT_PASSWORD"
sudo debconf-set-selections <<< "mysql-server mysql-server/root_password_again password $MYSQL_ROOT_PASSWORD"

# Install MySQL server
sudo apt install mysql-server -y

# Run post-installation steps to secure MySQL
sudo mysql --user=root --password=$MYSQL_ROOT_PASSWORD --execute="DELETE FROM mysql.user WHERE User='';"
sudo mysql --user=root --password=$MYSQL_ROOT_PASSWORD --execute="DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
sudo mysql --user=root --password=$MYSQL_ROOT_PASSWORD --execute="DROP DATABASE IF EXISTS test;"
sudo mysql --user=root --password=$MYSQL_ROOT_PASSWORD --execute="DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';"
sudo mysql --user=root --password=$MYSQL_ROOT_PASSWORD --execute="FLUSH PRIVILEGES;"
    
# Enable and start services
sudo systemctl enable mysql
sudo systemctl start mysql
sudo systemctl enable php8.1-fpm  # Adjust version as needed
sudo systemctl start php8.1-fpm   # Adjust version as needed
sudo systemctl enable nginx
sudo systemctl start nginx

# Install Node.js and PM2
sudo apt install -y nodejs npm
sudo npm install -g pm2

# Download and setup phpMyAdmin
sudo wget https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-all-languages.zip
sudo unzip phpMyAdmin-5.2.1-all-languages.zip
sudo mv phpMyAdmin-5.2.1-all-languages /usr/share/phpmyadmin
sudo ln -s  /usr/share/phpmyadmin /var/www/html/phpmyadmin
sudo chmod 775 -R /usr/share/phpmyadmin/
sudo chown root:www-data -R /usr/share/phpmyadmin/

# Configure Nginx for phpMyAdmin
sudo chmod -R 777 /etc/nginx/sites-available/
sudo tee /etc/nginx/sites-available/default <<EOF
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
        try_files \$uri \$uri/ /index.html?q=\$uri&\$args;
	}

	# pass PHP scripts to FastCGI server
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/run/php/php8.1-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
EOF

# Test Nginx configuration
sudo apt update -y
sudo nginx -t

# Reload Nginx
sudo systemctl reload nginx

echo "phpMyAdmin setup completed."
echo "Username: root"
echo "Password: $MYSQL_ROOT_PASSWORD"
